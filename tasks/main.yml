---

-
  name: "Clean Ubuntu Resin Instance - Show Ansible Role variables"
  debug: 
    msg: 
      - "cli_log_files_remove_enabled={{cli_log_files_remove_enabled|default('<UNDEFINED>')}}"
      - "cli_log_files_targets={{cli_log_files_targets|default('<UNDEFINED>')}}"
      - "cli_temp_files_remove_enabled={{cli_temp_files_remove_enabled|default('<UNDEFINED>')}}"
      - "cli_temp_files_targets={{cli_temp_files_targets|default('<UNDEFINED>')}}"



#clean-log-files

- 
  name: "Clean Ubuntu Resin Instance - Find log files"
  find:
    paths: "{{ item['cli_log_files_paths'] }}"
    patterns: "{{ item['cli_log_files_patterns'] }}"
    age: "{{ item['cli_log_files_age'] | default('180d') }}" # para los logs se tiene en cuenta la antiguedad del archivo
    recurse: "{{ item['cli_log_files_recurse'] | default(true) }}"
    hidden: "{{ item['cli_log_files_hidden'] | default(true) }}"
    file_type: "{{ item['cli_log_files_file_type'] | default('file') }}" # para los logs solo borramos los archivos, no los directorios
    follow: "{{ item['cli_log_files_follow'] | default(false) }}"
  register: cli_log_files_find_results
  with_items: "{{cli_log_files_targets}}"
  when: 
    - cli_log_files_find_enabled is undefined or (cli_log_files_find_enabled is defined and cli_log_files_find_enabled == true) # enabled by default
    - cli_log_files_targets is defined

-
  name: "Clean Ubuntu Resin Instance - Show finded files"
  debug: 
    msg: 
      - "{{ (item.files | map(attribute='path') | list) }}"
  with_items: "{{cli_log_files_find_results.results|flatten}}"
  when: 
    - cli_log_files_find_results is defined

- # magia
  name: "Clean Ubuntu Resin Instance - Prepare log files list" # transforma el list de files encontrados a un list de strings que son los paths solamente 
  set_fact:  
    cli_log_files_find_results_prepared: "{{ (cli_log_files_find_results_prepared | default([])) + (item.files | map(attribute='path') | list) }}" # toma la array de objetos "files", se queda solo con el atributo "path" de cada objeto y lo convierte a "list" para que pueda ser mostrada en un debug msg
    # NOTA: combinar el set_fact con el with_items hace que se concatenen los items del with_items dntro de la variable del set_fact
    # NOTA2: el default([]) es para instanciar una list vacia en la 1ra iteracion ya que "cli_log_files_find_results_prepared"  no existira en la 1ra.
  with_items: "{{cli_log_files_find_results.results|flatten}}" # aplana el array de arrays
  when: 
    - cli_log_files_find_results is defined

-
  name: "Clean Ubuntu Resin Instance - Show prepared log files list"
  debug: 
    msg: "{{ cli_log_files_find_results_prepared  }}" 
  when:
    - cli_log_files_show_enabled is undefined or (cli_log_files_show_enabled is defined and cli_log_files_show_enabled == true) # enabled by default
    - cli_log_files_find_results_prepared is defined

- 
  name: "Clean Ubuntu Resin Instance - Remove log files"
  become: yes
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ cli_log_files_find_results_prepared }}"
  when:
    - cli_log_files_remove_enabled is undefined or (cli_log_files_remove_enabled is defined and cli_log_files_remove_enabled == true) # enabled by default
    - cli_log_files_find_results_prepared is defined



#clean-temp-files

- 
  name: "Clean Ubuntu Resin Instance - Find temp files"
  find:
    paths: "{{ item['cli_temp_files_paths'] }}"
    patterns: "{{ item['cli_temp_files_patterns'] }}"
    recurse: "{{ item['cli_temp_files_recurse'] | default(true) }}"
    hidden: "{{ item['cli_temp_files_hidden'] | default(true) }}"
    file_type: "{{ item['cli_temp_files_file_type'] | default('any') }}"
    follow: "{{ item['cli_temp_files_follow'] | default(false) }}"
  register: cli_temp_files_find_results
  with_items: "{{cli_temp_files_targets}}"
  when: 
    - cli_temp_files_find_enabled is undefined or (cli_temp_files_find_enabled is defined and cli_temp_files_find_enabled == true) # enabled by default
    - cli_temp_files_targets is defined

-
  name: "Clean Ubuntu Resin Instance - Show finded files"
  debug: 
    msg: 
      - "{{ (item.files | map(attribute='path') | list) }}"
  with_items: "{{cli_temp_files_find_results.results|flatten}}"
  when: 
    - cli_temp_files_find_results is defined

- # magia
  name: "Clean Ubuntu Resin Instance - Prepare temp files list" # transforma el list de files encontrados a un list de strings que son los paths solamente 
  set_fact:  
    cli_temp_files_find_results_prepared: "{{ (cli_temp_files_find_results_prepared | default([])) + (item.files | map(attribute='path') | list) }}" # toma la array de objetos "files", se queda solo con el atributo "path" de cada objeto y lo convierte a "list" para que pueda ser mostrada en un debug msg
    # NOTA: combinar el set_fact con el with_items hace que se concatenen los items del with_items dntro de la variable del set_fact
    # NOTA2: el default([]) es para instanciar una list vacia en la 1ra iteracion ya que "cli_temp_files_find_results_prepared"  no existira en la 1ra.
  with_items: "{{cli_temp_files_find_results.results|flatten}}" # aplana el array de arrays
  when: 
    - cli_temp_files_find_results is defined

-
  name: "Clean Ubuntu Resin Instance - Show prepared temp files list"
  debug: 
    msg: "{{ cli_temp_files_find_results_prepared  }}" 
  when:
    - cli_temp_files_show_enabled is undefined or (cli_temp_files_show_enabled is defined and cli_temp_files_show_enabled == true) # enabled by default
    - cli_temp_files_find_results_prepared is defined

- 
  name: "Clean Ubuntu Resin Instance - Remove temp files"
  become: yes
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ cli_temp_files_find_results_prepared }}"
  when:
    - cli_temp_files_remove_enabled is undefined or (cli_temp_files_remove_enabled is defined and cli_temp_files_remove_enabled == true) # enabled by default
    - cli_temp_files_find_results_prepared is defined
